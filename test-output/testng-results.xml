<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="9" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-02T17:17:06 WAT" name="Regression Suite" finished-at="2021-08-02T17:17:21 WAT" duration-ms="15156">
    <groups>
    </groups>
    <test started-at="2021-08-02T17:17:06 WAT" name="Regression Test" finished-at="2021-08-02T17:17:21 WAT" duration-ms="15156">
      <class name="tests.UserRegistrationTestWithJavaFaker">
        <test-method signature="UserCanRegisterSuccssfully()[pri:1, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:09 WAT" name="UserCanRegisterSuccssfully" finished-at="2021-08-02T17:17:15 WAT" duration-ms="5596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanRegisterSuccssfully -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:15 WAT" name="screenshotOnFailure" finished-at="2021-08-02T17:17:15 WAT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanRegisterSuccssfully status=SUCCESS method=UserRegistrationTestWithJavaFaker.UserCanRegisterSuccssfully()[pri:1, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="RegisteredUserCanLogout()[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:15 WAT" name="RegisteredUserCanLogout" finished-at="2021-08-02T17:17:17 WAT" depends-on-methods="tests.UserRegistrationTestWithJavaFaker.UserCanRegisterSuccssfully" duration-ms="2303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisteredUserCanLogout -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:17 WAT" name="screenshotOnFailure" finished-at="2021-08-02T17:17:17 WAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisteredUserCanLogout status=SUCCESS method=UserRegistrationTestWithJavaFaker.RegisteredUserCanLogout()[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="RegisteredUserCanLogin()[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:17 WAT" name="RegisteredUserCanLogin" finished-at="2021-08-02T17:17:21 WAT" depends-on-methods="tests.UserRegistrationTestWithJavaFaker.RegisteredUserCanLogout" duration-ms="3630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisteredUserCanLogin -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a]" started-at="2021-08-02T17:17:21 WAT" name="screenshotOnFailure" finished-at="2021-08-02T17:17:21 WAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegisteredUserCanLogin status=SUCCESS method=UserRegistrationTestWithJavaFaker.RegisteredUserCanLogin()[pri:0, instance:tests.UserRegistrationTestWithJavaFaker@10afe71a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.UserRegistrationTestWithJavaFaker -->
      <class name="tests.ProductHoverMenuTest">
        <test-method signature="UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:tests.ProductHoverMenuTest@741f8dbe]" started-at="2021-08-02T17:17:21 WAT" name="UserCanSelectSubCategoryFromMainMenu" finished-at="2021-08-02T17:17:21 WAT" duration-ms="72" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at tests.ProductHoverMenuTest.UserCanSelectSubCategoryFromMainMenu(ProductHoverMenuTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSelectSubCategoryFromMainMenu -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ProductHoverMenuTest@741f8dbe]" started-at="2021-08-02T17:17:21 WAT" name="screenshotOnFailure" finished-at="2021-08-02T17:17:21 WAT" duration-ms="539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSelectSubCategoryFromMainMenu status=FAILURE method=ProductHoverMenuTest.UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:tests.ProductHoverMenuTest@741f8dbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.ProductHoverMenuTest -->
      <class name="tests.ContactUsTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.ContactUsTest@35ef1869]" started-at="2021-08-02T17:17:00 WAT" name="startDriver" finished-at="2021-08-02T17:17:06 WAT" duration-ms="5868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserCanUseContactUs()[pri:0, instance:tests.ContactUsTest@35ef1869]" started-at="2021-08-02T17:17:06 WAT" name="UserCanUseContactUs" finished-at="2021-08-02T17:17:09 WAT" duration-ms="2987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanUseContactUs -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ContactUsTest@35ef1869]" started-at="2021-08-02T17:17:09 WAT" name="screenshotOnFailure" finished-at="2021-08-02T17:17:09 WAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanUseContactUs status=SUCCESS method=ContactUsTest.UserCanUseContactUs()[pri:0, instance:tests.ContactUsTest@35ef1869] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.ContactUsTest@35ef1869]" started-at="2021-08-02T17:17:21 WAT" name="stopDriver" finished-at="2021-08-02T17:17:21 WAT" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ContactUsTest -->
    </test> <!-- Regression Test -->
  </suite> <!-- Regression Suite -->
</testng-results>
